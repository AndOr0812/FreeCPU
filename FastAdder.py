print((lambda count_i, gen: "\nmodule FastAdder"+str(count_i)+"(\n\tinput wire cin,\n\tinput wire ["+str(count_i-1)+":0] a,\n\t"+"input wire ["+str(count_i-1)+":0] b,\n\toutput wire ["+str(count_i-1)+":0] out,\n\toutput wire cout\n);\nwire ["+str(count_i-1)+":0] g = a & b;\nwire ["+str(count_i-1)+":0] p = a ^ b;\nassign out = a ^ b ^ {\n\t"+('\n\t'.join([gen(i) for i in range(count_i-2, -2, -1)]).replace("(cin),", "(cin)"))+"\n};\nassign cout = "+gen(count_i-1)[0:-1]+";\nendmodule\n")(int(input("Adder bit width: ")), lambda depth: ("("+(''.join([''.join([" p["+str(j)+"] &" for j in range(depth, i, -1)]) + (" g["+str(i)+"]) | (" if i >= 0 else "") for i in range(depth, -2, -1)]))+" cin),").replace("( ", "(")))